syntax = "proto3";
package zeta.escrow;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "zeta/x/escrow/types";

// Msg defines the Msg service.
service Msg {
      rpc BeginEscrow(MsgBeginEscrow) returns (MsgBeginEscrowResponse);
  rpc JoinEscrow(MsgJoinEscrow) returns (MsgJoinEscrowResponse);
  rpc CompleteEscrowNoDispute(MsgCompleteEscrowNoDispute) returns (MsgCompleteEscrowNoDisputeResponse);
  rpc RaiseBuyerDispute(MsgRaiseBuyerDispute) returns (MsgRaiseBuyerDisputeResponse);
  rpc PostSellerEvidence(MsgPostSellerEvidence) returns (MsgPostSellerEvidenceResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgBeginEscrow {
  string creator = 1;
  uint64 buyOrderId = 2;
}

message MsgBeginEscrowResponse {
  uint64 crowId = 1;
}

message MsgJoinEscrow {
  string creator = 1;
  uint64 crowId = 2;
}

message MsgJoinEscrowResponse {
}

message MsgCompleteEscrowNoDispute {
  string creator = 1;
  uint64 crowId = 2;
}

message MsgCompleteEscrowNoDisputeResponse {
}

message MsgRaiseBuyerDispute {
  string creator = 1;
  uint64 crowId = 2;
  string title = 3;
  string description = 4;
  repeated string evidence = 5;
}

message MsgRaiseBuyerDisputeResponse {
  uint64 disputeId = 1;
}

message MsgPostSellerEvidence {
  string creator = 1;
  uint64 crowId = 2;
  uint64 disputeId = 3;
  string description = 4;
  string evidence = 5;
}

message MsgPostSellerEvidenceResponse {
}

// this line is used by starport scaffolding # proto/tx/message
